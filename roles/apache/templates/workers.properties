# the list of workers
worker.list=worker1, worker2, loadbalancer

# Defines a worker named "worker1, worker2" that uses the ajp13 protocol to forward requests to a Tomcat process.
worker.worker1.type=ajp13
worker.worker1.host=localhost
worker.worker1.port=8080
worker.worker1.lbfactor=1
# worker "worker1" uses connections, which will stay no more than 10mn in the connection pool
worker.worker1.connection_pool_timeout=600
# worker "worker1" ask operating system to send KEEP-ALIVE signal on the connection
worker.worker1.socket_keepalive=1

worker.worker2.type=ajp13
worker.worker2.host=localhost
worker.worker2.port=8080
worker.worker2.lbfactor=1
# worker "worker2" uses connections, which will stay no more than 10mn in the connection pool
worker.worker2.connection_pool_timeout=600
# worker "worker2" ask operating system to send KEEP-ALIVE signal on the connection
worker.worker2.socket_keepalive=1

# Defines a worker named "loadbalancer" that loadbalances several Tomcat processes transparently.
worker.loadbalancer.type=lb
worker.loadbalancer.method=B
# The worker loadbalancer while use "real" workers worker1 and worker2
worker.loadbalancer.balance_workers=worker1, worker2

# Define a 'jkstatus' worker using status
worker.list=jkstatus, jkmanager
# worker.jkstatus.type=status
# worker.jkstatus.read_only=true
# Add the jkstatus mount point
# JkMount /jkmanager/* jkstatus

# Define two status worker:
# - jk-status for read-only use
# - jk-manager for read/write use
# worker.jkmanager.type=status
